{
  "name": "eggd_conductor",
  "title": "eggd_conductor",
  "version": "2.0.0",
  "summary": "eggd_conductor",
  "dxapi": "1.0.0",
  "inputSpec": [
    {
      "name": "eggd_conductor_config",
      "label": "conductor app config",
      "class": "file",
      "optional": false,
      "help": "config file for app containing tokens etc",
      "group": "files"
    },
    {
      "name": "assay_config",
      "label": "assay level config",
      "class": "array:file",
      "optional": true,
      "patterns": [
        "*.json"
      ],
      "help": "Use given low level config for running analyses instead of inferring from name. Multiple configs can be passed for mixed assays",
      "group": "files"
    },
    {
      "name": "upload_sentinel_record",
      "label": "Sentinel file",
      "class": "record",
      "optional": true,
      "help": "Sentinel file for run to analyse, uploaded by dx-streaming-upload",
      "group": "files"
    },
    {
      "name": "samplesheet",
      "label": "SampleSheet",
      "help": "Samplesheet for given run, if not given will attempt to find from sentinel file / upload tars. Must be given if using fastqs input.",
      "class": "file",
      "optional": true,
      "patterns": [
        "*.csv"
      ],
      "group": "files"
    },
    {
      "name": "run_info_xml",
      "label": "RunInfo.xml",
      "help": "RunInfo.xml file for the run, used to parse RunID from if providing an array of fastQs and not specifying with -RUN_ID. Not required if providing sentinel file.",
      "class": "file",
      "optional": true,
      "patterns": [
        "*.csv"
      ],
      "group": "files"
    },
    {
      "name": "fastqs",
      "label": "fastqs",
      "class": "array:file",
      "optional": true,
      "patterns": [
        "*.fastq",
        "*.fastq.gz"
      ],
      "help": "Set of fastqs to use for starting analysis on if already demultiplexed",
      "group": "files"
    },
    {
      "name": "sample_names",
      "label": "sample names",
      "class": "string",
      "optional": true,
      "help": "Comma separated list of sample names for given fastqs, only required if running without samplesheet"
    },
    {
      "name": "dx_project",
      "label": "DNAnexus project id",
      "class": "string",
      "optional": true,
      "help": "Project in which to run and store analysis outputs. \n If not given a new one will be created from the run ID and assay code."
    },
    {
      "name": "create_project",
      "label": "Create project",
      "class": "boolean",
      "optional": true,
      "default": false,
      "help": "If to automatically create a downstream analysis project, default behaviour is to use the same project as eggd_conductor is currently running in"
    },
    {
      "name": "run_id",
      "label": "ID of sequencing run",
      "class": "string",
      "optional": true,
      "help": "Parsed from samplesheet if not given"
    },
    {
      "name": "job_reuse",
      "label": "job reuse",
      "class": "string",
      "optional": true,
      "help": "JSON formatted string mapping analysis step -> job ID to reuse outputs from instead of running analysis (i.e. {\"analysis_1\": \"job-xxx\"} or if using mixed assay runs '{\"TSO500\": {\"analysis_1\": \"job-xxx\"}}')"
    },
    {
      "name": "exclude_samples",
      "label": "exclude samples",
      "class": "string",
      "optional": true,
      "help": "comma separated string of sample names to exclude from per sample analysis steps"
    },
    {
      "name": "mismatch_allowance",
      "label": "mismatch allowance",
      "class": "int",
      "default": 1,
      "help": "no. of samples allowed to not match to any assay code and use the assay code of other samples"
    },
    {
      "name": "development",
      "label": "development",
      "class": "boolean",
      "optional": true,
      "default": false,
      "help": "Name output project with 003 prefix and date instead of 002_{RUN_ID}_{ASSAY} format"
    },
    {
      "name": "testing",
      "label": "testing",
      "class": "boolean",
      "optional": true,
      "help": "Terminates all jobs and clears output files after launching - for testing use only",
      "group": "testing"
    },
    {
      "name": "testing_sample_limit",
      "label": "testing sample limit",
      "class": "string",
      "optional": true,
      "help": "int number samples to limit analyses to run on - for testing use only",
      "group": "testing"
    },
    {
      "name": "demultiplex_job_id",
      "label": "demultiplexing job id",
      "class": "string",
      "optional": true,
      "help": "Optionally use fastqs from previous demultiplexing job, will skip demultiplexing stage"
    },
    {
      "name": "demultiplex_out",
      "label": "demultiplex output path",
      "class": "string",
      "optional": true,
      "help": "Path to store demultiplexing output, if not given will default to parent of sentinel file. Should be in the format project:path"
    }
  ],
  "outputSpec": [
    {
      "name": "job_ids",
      "label": "job ids",
      "class": "string",
      "optional": true,
      "help": "comma separated string of launched job IDs"
    },
    {
      "name": "assay_config_file_ids",
      "label": "assay config file IDs",
      "class": "string",
      "optional": true,
      "help": "file IDs of assay config file used for analysis (note this file is not output by the app, it is just the one used for analysis)"
    },
    {
      "name": "job_summaries",
      "label": "Job summary files",
      "class": "array:file",
      "optional": true,
      "help": "File containing the information of job that have been started"
    }
  ],
  "runSpec": {
    "timeoutPolicy": {
      "*": {
        "hours": 8
      }
    },
    "interpreter": "bash",
    "file": "src/eggd_conductor.sh",
    "distribution": "Ubuntu",
    "release": "20.04",
    "version": "0",
    "headJobOnDemand": true
  },
  "access": {
    "network": [
      "*"
    ],
    "allProjects":"CONTRIBUTE",
    "project": "CONTRIBUTE"
  },
  "developers":[
    "org-emee_1"
  ],
  "authorizedUsers": [
    "org-emee_1"
  ],
  "regionalOptions": {
    "aws:eu-central-1": {
      "systemRequirements": {
        "*": {
          "instanceType": "mem1_ssd1_v2_x2"
        }
      }
    }
  }
}
