{
  "name": "eggd_conductor_v1.0.0",
  "title": "eggd_conductor_v1.0.0",
  "summary": "eggd_conductor",
  "dxapi": "1.0.0",
  "properties": {
    "githubRelease": "v1.0.0"
  },
  "inputSpec": [
    {
      "name": "dx_project",
      "label": "DNAnexus project id",
      "class": "string",
      "optional": true,
      "help": "Project in which to run and store analysis outputs. \n If not given a new one will be created from the run ID and assay code."
    },
    {
      "name": "sentinel_file",
      "label": "Sentinel file",
      "class": "record",
      "optional": true,
      "suggestions": [
        {
          "project": "project-FpVG0G84X7kzq58g19vF1YJQ" 
        }
      ],
      "help": "Sentinel file for run to analyse, uploaded by dx-streaming-upload"
    },
    {
      "name": "samplesheet",
      "label": "SampleSheet",
      "help": "Samplesheet for given run, if not given will attempt to find in data tars. Must be given if using fastqs input.",
      "class": "file",
      "optional": true,
      "patterns": [
        "*"
      ]
    },
    {
      "name": "sample_names",
      "label": "Comma seperated list of sample names",
      "class": "string",
      "optional": true,
      "help": "List of sample names for given fastqs, only required if running without samplesheet"
    },
    {
      "name": "fastqs",
      "label": "Fastqs",
      "class": "array:file",
      "optional": true,
      "patterns": [
        "*"
      ],
      "help": "Set of fastqs to use for starting analysis on if already demultiplexed"
    },
    {
      "name": "high_level_config",
      "label": "High level config file of sample naming -> assay types",
      "class": "file",
      "optional": true,
      "patterns": [
        "*"
      ],
      "help": ""
    },
    {
      "name": "custom_config",
      "label": "Custom low level config",
      "class": "file",
      "optional": true,
      "patterns": [
        "*.json"
      ],
      "help": "Use given low level config for running analyses"
    },
    {
      "name": "eggd_conductor_config",
      "label": "eggd conductor config file",
      "class": "file",
      "optional": true,
      "help": "config file for global app variables, contains things such as bcl2fastq app id"
    },
    {
      "name": "assay_type",
      "label": "Assay type to use for all samples (e.g. TWE, WES, MYE...",
      "class": "string",
      "optional": true,
      "help": "Use low level config for all samples for given assay code"
    },
    {
      "name": "run_id",
      "label": "ID of sequencing run",
      "class": "string",
      "optional": true,
      "help": "Parsed from samplesheet if not given"
    },
    {
      "name": "validate_samplesheet",
      "label": "Validate samplesheet",
      "class": "boolean",
      "optional": true,
      "default": true,
      "help": "Perform samplesheet validation and exit on invalid sheet"
    },
    {
      "name": "development",
      "label": "Development run",
      "class": "boolean",
      "optional": true,
      "default": false,
      "help": "Name output project with 003 prefix and date instead of 002"
    },
    {
      "name": "bcl2fastq_job_id",
      "label": "Job ID of previous bcl2fastq job",
      "class": "string",
      "optional": true,
      "help": "Optionally use fastqs from previous bcl2fastq job, will skip demultiplexing stage"
    },
    {
      "name": "bcl2fastq_out",
      "label": "bcl2fastq output path",
      "class": "string",
      "optional": true,
      "help": "Path to store bcl2fastq output, if not given will default to run dir in 001_Staging_Area52. Should be in the format project:path"
    }
  ],
  "outputSpec": [],
  "runSpec": {
    "timeoutPolicy": {
      "*": {
        "hours": 6
      }
    },
    "interpreter": "bash",
    "file": "src/eggd_conductor.sh",
    "distribution": "Ubuntu",
    "release": "20.04",
    "version": "0"
  },
  "access": {
    "network": [
      "*"
    ],
    "allProjects":"CONTRIBUTE",
    "project": "CONTRIBUTE"
  },
  "priority": "high",
  "regionalOptions": {
    "aws:eu-central-1": {
      "systemRequirements": {
        "*": {
          "instanceType": "mem1_ssd1_v2_x2"
        }
      }
    }
  }
}
